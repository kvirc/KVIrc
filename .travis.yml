language: cpp
matrix:
    include:
        - os: linux
          env: WANT_KDE=NO
          compiler: gcc
        - os: linux
          env: WANT_KDE=YES
          compiler: gcc
        - os: linux
          env: DEBUILD=YES
          compiler: gcc
        - os: osx
          compiler: clang
sudo: required
dist: trusty
before_install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cat /proc/cpuinfo /proc/meminfo; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then lsb_release -a; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sw_vers; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sysctl -a | grep cpu; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sysctl -a | grep mem; fi
    - if [[ "$TRAVIS_REPO_SLUG" == "kvirc/KVIrc" && "$TRAVIS_PULL_REQUEST" == "false" && "$TRAVIS_BRANCH" == "master" ]]; then openssl aes-256-cbc -K $encrypted_da8de0aafbfc_key -iv $encrypted_da8de0aafbfc_iv -in .travis-github.ssh.enc -out ~/kvirc-github-key -d; fi
    - export encrypted_da8de0aafbfc_key=no
    - pwd
install:
    - CMAKE_ARGS=""
    - |
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            if [ -z "$DEBUILD" ]
            then
            # want cmake newer than in ubuntu 14.04
              sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
              sudo apt-get update
              sudo apt-get install -y cmake

              sudo apt-get install -y libperl-dev libenchant-dev

              CMAKE_ARGS="$CMAKE_ARGS -DWANT_KDE=$WANT_KDE"
              if [[ "$WANT_KDE" == "YES" ]]; then
                sudo apt-get install -y kdelibs5-dev
              fi
    
              # for ./.travis-coverity-scan.py
              sudo apt-get install -y python3-yaml
            else
              sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
              sudo apt-get update
              sudo apt-get install -y devscripts debhelper cmake libperl-dev zlib1g-dev libx11-dev libxrender-dev libssl-dev qtbase5-dev  qttools5-dev-tools libqt5x11extras5-dev libphonon4qt5-dev qttools5-dev libqt5svg5-dev qtmultimedia5-dev libqt5webkit5-dev libphonon4qt5experimental-dev pkg-config libxss-dev python-dev libqtwebkit-dev
            fi
        fi
    - |
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          brew update
          brew install qt enchant
          # want cmake newer than by default in travis osx
          brew upgrade cmake
        fi
script:
    - |
        if [ -z "$DEBUILD" ]
            then
            cd build
            cmake $CMAKE_ARGS ..
            make -j3
            if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo make install; fi
            if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then make install; fi
            ls -l
            cd ..
        else
            cd dist
            export DEB_BUILD_OPTIONS="parallel=3"
            bash build_debian.sh
            cd build && sudo dpkg -i *.deb
            ls -l
            cd ../..
        fi
after_success:
    - test -r .travis_after_all.py && python .travis_after_all.py || echo No .travis_after_all.py found
    - test -r .to_export_back && echo $(cat .to_export_back) || echo No .to_export_back found
    - export DUMMY_VAR=dummy-value $(cat .to_export_back)
    - |
          if [ "$BUILD_LEADER" == "YES" ] && [ "$BUILD_AGGREGATE_STATUS" == "others_succeeded" ] && [ "$TRAVIS_REPO_SLUG" == "kvirc/KVIrc" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ]; then
              echo "All builds passed!"
              mkdir -p ~/.ssh
              chmod 0600 ~/kvirc-github-key
              cp .travis.ssh ~/.ssh/config
              git config --global user.email "kvirc-travis@users.noreply.github.com"
              git config --global user.name "kvirc-travis"
              ./.travis-coverity-scan.py
          else
              echo "Not leader"
          fi

# TODO: build .dmg on osx and upload it
