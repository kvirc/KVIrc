language: cpp
matrix:
    include:
        - os: linux
          env: WANT_KDE=NO
          compiler: gcc
        - os: linux
          env: DEBUILD=YES
          compiler: gcc
        - os: osx
          compiler: clang
        - stage: deploy
          os: linux
          before_install:
          after_success:
          install:
              - if [[ "$TRAVIS_REPO_SLUG" == "kvirc/KVIrc" && "$TRAVIS_PULL_REQUEST" == "false" && "$TRAVIS_BRANCH" == "master" ]]; then openssl aes-256-cbc -K $encrypted_da8de0aafbfc_key -iv $encrypted_da8de0aafbfc_iv -in .travis-github.ssh.enc -out ~/kvirc-github-key -d; fi
              - export encrypted_da8de0aafbfc_key=no
              - sudo apt-get update
                # for ./.travis-coverity-scan.py
              - sudo apt-get install -y python3-yaml
          script:
              - |
                    if [ "$TRAVIS_REPO_SLUG" == "kvirc/KVIrc" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ]; then
                        echo "All builds passed!"
                        mkdir -p ~/.ssh
                        chmod 0600 ~/kvirc-github-key
                        cp .travis.ssh ~/.ssh/config
                        git config --global user.email "kvirc-travis@users.noreply.github.com"
                        git config --global user.name "kvirc-travis"
                        ./.travis-coverity-scan.py
                    else
                        echo "Not master"
                    fi

              #- |
                    #if [ "$TRAVIS_OS_NAME" == "osx" ]; then
                    #    npm update -g npm
                    #    npm install -g appdmg
                    #    appdmg -v dist/osx/osx_dmg.json KVIrc.dmg
                    #fi

              # Only upload to kvirc.staticfox.net if this is a commit to master
              #- |
                    #if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TRAVIS_REPO_SLUG" == "kvirc/KVIrc" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ]; then
                    #    kvi_version="$(grep -i "^set(VERSION_RELEASE .*)$" CMakeLists.txt | egrep -o '[0-9\.]' | tr -d '\n')";
                    #    git_desc="$(git describe)";
                    #    curl --ftp-create-dirs -T KVIrc.dmg -u $FTP_USER:$FTP_PASS ${FTP_HOST}KVIrc-${kvi_version}-dev-${git_desc}.dmg
                    #fi

sudo: required
git:
    depth: 9999999
dist: trusty
before_install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cat /proc/cpuinfo /proc/meminfo; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then lsb_release -a; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sw_vers; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sysctl -a | grep cpu; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then sysctl -a | grep mem; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rvm get head; fi
    - export encrypted_da8de0aafbfc_key=no
    - pwd
install:
    - CMAKE_ARGS=""
    - |
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            # want cmake newer than in ubuntu 14.04
            sudo add-apt-repository -y ppa:george-edison55/cmake-3.x
            sudo apt-get update
            sudo apt-get install -y cmake libperl-dev libenchant-dev qtmultimedia5-dev libqt5webkit5-dev libqt5svg5-dev libqt5x11extras5-dev libphonon4qt5-dev libphonon4qt5experimental-dev

            if [ -z "$DEBUILD" ]
            then
              CMAKE_ARGS="$CMAKE_ARGS -DWANT_KDE=$WANT_KDE"
              if [[ "$WANT_KDE" == "YES" ]]; then
                sudo apt-get install -y kdelibs5-dev
              fi
            else
              sudo apt-get install -y devscripts debhelper zlib1g-dev libx11-dev libxrender-dev libssl-dev qttools5-dev-tools qttools5-dev pkg-config libxss-dev python-dev dput gnupg
            fi
        fi
    - |
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          brew update
          brew install qt5 enchant
          # want cmake newer than by default in travis osx
          brew upgrade cmake
          export CMAKE_FRAMEWORK_PATH="$CMAKE_FRAMEWORK_PATH:$(brew --prefix qt5)"
        fi
script:
    - |
        if [ -z "$DEBUILD" ]
            then
            mkdir build
            cd build
            cmake $CMAKE_ARGS .. || exit 1
            make -j3  || exit 1
            if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo make install; fi
            if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then make install; fi
            ls -l
            cd ..
        else
            cd dist
            export DEB_BUILD_OPTIONS="parallel=3"
            bash build_debian.sh  || exit 1
            cd build && sudo dpkg -i *.deb
            ls -l
            cd ../..
        fi
after_success:
    - |
          if [ ! -z "$DEBUILD" ] && [ "$TRAVIS_REPO_SLUG" == "kvirc/KVIrc" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ]; then
              cd dist
              bash build_debian.sh -p || exit 1
          fi
env:
  global:
  # These 3 lines are: $FTP_USER, $FTP_PASS, $FTP_HOST
  - secure: Zn6G9cdrsjSBMlKIDef/DiLYBP9tlAn9PAXbbTOhz3giuw8xlGsJhi9lVXkT5vTU30ZmdsjG5c0NgQabF8Tye9Fvbc04HU+2biN2rpDTrzjDIfH5sp6cexQ4rr0ivGfQ2ySIALPEmafF8FdkOmtb6G62J/KmqH0wRRxhuHSxbnGfp28R86b347dtZ0khlNJW+HxM7/ZEMlqD4w0s5p95h+HP5YA085oXXtwge2zP0z+HEiC8TOxXvne8qMD/sHUNsU7r/OzgpkOXPdNHnnxEKtoefSv8VtqS9gj2/4bkQFL2CvphQaoPlRzMZeB5y1TatkgK9bcu7cwnyeHWDlhqG5x6vpEpAPk9STwzzteJtiY+3cq1ZOIm6S5KBy/3OMcpjKfpbMTk4sVabEN35A2ePfuTxHLc9fX9dP1zymABqzfHY3eFO6FZ7ljkSZKZF9R9VntI4bW0JstDeEGU+Xiz3rq10RcEGD4+cpAKbY6SQiYHf4+6daI2WqpDEUZRoM3NLeozCecFI6J6T1fECTimxZaSPhVMyADIBA6rqjP4IApSBUdTWKZnYLSJq9xSfQAcFXWKECrRnktC5B4xksNFUWpd9uUbF7H6YPzs02wlEPTTx9f94rKdMPU/CV0qh89xCmCCf3TKycmDYDExj+xamoTAl/+hNq4cPRgrU/0SEG8=
  - secure: iiSH7bJRmBpNvJWCjZBoiXW2hTOVsNYpopKJ//Gr8EvGGSArtNFjO9CqTlfkGOsQVB1GgshV1HeYO+9966z1NA9qLpS3KXtHZL0b3bJPOMp/7/foxRg3WM/vwq9iL8W7meQ7soEkMbHnRSNJbkCfTEnkYLQgAl3TBPfwlcze3lZrphc5YtKdX/jS1je+mqEFw/SkvKvm2SzCudl/gbq7sk/fzw1LQnvcvaVvDfTkbGTfbdB7CWkEAmibtf2ot/1Iho6klCPJH8EzUNSTUpNjeloY2ih+o583fzS/nuSj0rNOynNzVbiKyuirQj84X5ziDGXE4FhDIgUy/51M/3tnMVnzoXp+FsL7Kes8sJKN+uPWJB8N8oo/zMNLeVh06dBza1qufT4JWwdN793bYqLlrD4w2YjDdsu0qaP8juJyg1NDSecF2VmxrCvKA2qKlsQxUFvw+NCCG+EvrIX1wAM0e418AoCADxf+tO7Irrj4Hzn3ZtIEWCslNxOmxIOQdwxfZBYib2Ih9jGNkh/EacIXdfUmC/IhW7y12Og5aTxVJXJIaqT3x9Uj6ZrEvcaPzYKI4ahtypxLXS2lIXkVWlFPPzVCWlKJyLp6NnQJlXT5O3L4AN+tEpyT0By3DJtQt7zWZGXTrsK4lL4OtY6RpmEksa7PKOEZ6URx2sMj3bo87Oo=
  - secure: r+IE4iYTswgSvRzslc56Lcgj4et9iVRxHerB6Ze9LY1gec0HIAG6DHjJr9T3EpVLlteksV5B1bxyb48frhNEmtmApHYSAzB15qUUnUap3h6MEC6VmZ/X3zEqCtahgPNfWJZo08PII2011PuB0xDw4WHnJ7wFu9nx3fwOmCUKNhvLfNhTHg43HUeROlUDuHt9QfbMpGUQNEQgPdynA2Y9a4pbp4JR58lzLGiIulrapj2T8ngDes8tY2XCsXitZjdZyfpSBdaotMpCK42uPemyC7/nRZA4Zq+0OI30Kkod0fhkGf2Mga2sd9KEk4ZauRsoK3pEix3yxsF5q+d4Y/Zb6c7aKbHpgUkGwD5ZFPpQ5YJY3u8fuDjBZd65IYSjR472vxeaFMRYT8Dmi9otAQcZO7olcm1pT2HmRuJmR/5ExDD6Zxc0Q71b7twDL6rb/WpK+TwDoksASsQ53Sp0Cfmpxeu1Z5AxIsf0APlbboI9py6z6LxPwLms8+SpHQuNAfk1vVzGruf0zyMGl40ZusDgJjr5Arz8yrN/VVPg8CZbvNsctBCMMN/rFFYYh4ssfAxa8fftu5/vcZhkoYKqURBMEocsTaimqatubwUvkCGiQ0nDFi1+g7r81s6qdX1vnirk/qm7W2m2Kw0E3G+O12RnZKCuY4LW7ZxYtqtu97dRRCk=
  # These 2 lines are: $GPGPASS, $AESPASS
  - secure: iFr+Hn6PBDqciGSi8BFWzwWPhIhkjdzxmVQohzZEAHoxBkI6rKEvpxXvhw/gkqbRhgi0/C8aoM+Y30We/OhyfUUr58kJTnRpUw7xE4wypo2KbGvPIqmVJRbMcJnVgTROyixlXcricWwx2c3GTSNEfq3C8D68Ge3jPrBPHIZeiE96nqOi/mk9LX89ypHv4Vf4VoteHvz9z9Kk+/30GUUlL84bg4C4mBilSxkaJQd/bu5p6JzgMMgma8dclmN9N/TYrsHIqrZkxpDp/RkXzZaqpl5OmsISyVWgWmzZdgU2OCkSYpfxH1UFpJF6hf+YJyd+zNebN+uNY3R/gD4a7FfSXbQ4uoAcfLfzRlRLF2pbhJzPNv6Fx+ywXJfMxkKurklD8UAsLikX9WIbkEnnyguJotMWakmsRY8A/dQoM3ljCKsWfEh1BCNb3XT5GjBpQtTqKRQ0Oz7nQx1HyAZN3chhQZ+ty+AJS64+kbtUGEqHdJ1cG8LUTpdABNuUI6an/hO2c3nZ9gITpQKvXe19rB6fBEUVVxCeXLQTQIdsxpZNQrE2O7HH4lx2Yc4JmZQjbpHvTo6HVFWTAjQPsJjMG/F9/BYEo9JmR3mN5fjF2eRLlBfpdbfflxp+Y2Tz7/TTtNuMPoMQjC0PlDaT8fHr2VsSMdmpV8TW+VHDf2whC25QiQs=
  - secure: Xo0rxVU2ePrDm1gAYPqvfNXXrdc2tR6PUiL1yVZtWPt/I++vzkhNZ+9WKdPq1BfpLabi8CRiyrbaW8qQuFK1K0jmoKGMX8H19kN/KMFO2zNngFbGjTR3Gx2eHXmDN0esvw8MPWN0srKL97uP+RW21zaO7RB7n5xFKgzebtz+VWpdRQaWRolZpiZv9qv+1tlDHLV3YtLVrNiYfq/LRkdJm6g0bYhlMAt0VkjroR/BDP7wx/4WJs3ZFdsbi7LID2883jUYNybFDArC7991OnN9v45QkJPLKiiDpzS4ztl1ZYVUGIK6hGlqnqqKl3JXdhVaTwu94TVStuaZnlB0cxKXDRX9xeYv4uyX0GU+75CDo7X4kxu+9wKdiGiv2ffGDLxbKvrS7rNGvcwKs+v5yTAvpQypPxmx4LuYVwOfiwAkyU6N6EPMygnJZ6Lnzw1lVMz6qMDKOl5yq8iIKe9nD+kjlFt6TRb0zkpJVwPAl9wBqUSwN3Olnc8uHaiP8oI2CPBobXtDT9Aw/78nylg+tUt2gSlacO8hriPlI2TQz2ltepXxrpE8F+Rz1Vj6R4D5/DaWlqaXMP5PpUnFy/OfQeWbmHjLyFbrGGCAnnW+Z76HpDXJQs1XG6mSVgsHTY9xeGkybPykWemLz0W2TE/uASmoaJk7BXPWU/zbJxCreBChWlM=
